2.  Synopsys Commands                                        Command Reference
                               get_timing_paths

NAME
       get_timing_paths
              Creates  a  collection  of timing paths for custom reporting and
              other processing.

SYNTAX
       collection get_timing_paths
               [-to to_list
                | -rise_to rise_to_list
                | -fall_to fall_to_list]
               [-from from_list
                | -rise_from rise_from_list
                | -fall_from fall_from_list]
               [-through through_list]
               [-rise_through rise_through_list]
               [-fall_through fall_through_list]
               [-exclude exclude_list]
                | -rise_exclude rise_exclude_list
                | -fall_exclude fall_exclude_list]
               [-delay_type delay_type]
               [-nworst paths_per_endpoint]
               [-max_paths max_path_count]
               [-enable_preset_clear_arcs]
               [-group group_name]
               [-greater greater_limit]
               [-lesser lesser_limit]
               [-slack_greater_than greater_slack_limit]
               [-slack_lesser_than lesser_slack_limit]
               [-include_hierarchical_pins]
               [-path_type full_clock_expanded | full]
               [-unique_pins]
               [-start_end_pair]
               [-scenarios scenario_list]

   Data Types
       to_list                 list
       rise_to_list            list
       fall_to_list            list
       from_list               list
       rise_from_list          list
       fall_from_list          list
       through_list            list
       rise_through_list       list
       fall_through_list       list
       exclude_list            list
       rise_exclude_list       list
       fall_exclude_list       list
       delay_type              string
       paths_per_endpoint      integer
       max_path_count          integer
       group_name              list
       greater_limit           float
       lesser_limit            float
       greater_slack_limit     float
       lesser_slack_limit      float
       scenario_list           list

ARGUMENTS
       -to to_list
              Specifies the to pins, ports, nets, or clocks.   Path  endpoints
              are  the output ports or data pins of registers.  If you specify
              a clock, the command  considers  all  endpoints  that  are  con-
              strained by the clock.

       -rise_to rise_to_list
              This  option  is  similar to the -to option, but applies only to
              paths rising at the endpoint.  If  you  specify  a  clock,  this
              option selects the paths that are captured by the rising edge of
              the clock at the clock source, taking into account  any  logical
              inversions along the clock path.

       -fall_to fall_to_list
              This  option  is  similar to the -to option, but applies only to
              paths falling at the endpoint. If  you  specify  a  clock,  this
              option  selects  the paths that are captured by the falling edge
              of the clock at the clock source, taking into account any  logi-
              cal inversions along the clock path.

       -from from_list
              Specifies  the  from  pins, ports, nets, or clocks.  Path start-
              points are the input ports or clock pins of registers.   If  you
              specify  a  clock, the command considers all startpoints clocked
              by the clock.

       -rise_from rise_from_list
              This option is similar to the -from option, but applies only  to
              paths rising from the specified objects. If you specify a clock,
              this option selects the startpoints whose paths are launched  by
              the  rising  edge  of the clock at the clock source, taking into
              account any logical inversions along the clock path.

       -fall_from fall_from_list
              This option is similar to the -from option, but applies only  to
              paths  falling  from  the  specified  objects.  If you specify a
              clock, this option  selects  the  startpoints  whose  paths  are
              launched  by  the falling edge of the clock at the clock source,
              taking into account any logical inversions along the clock path.

       -through through_list
              Reports  only  paths that pass through the named pins, ports, or
              clocks.  If you do not use  the  -through  option,  the  command
              defaults  to reporting the longest path to an output port if the
              design has no timing constraints.  If it has timing constraints,
              the  default  is  to report the path with the worst slack within
              each path group if you do not use the -group option.  If you use
              -group,  the  default is to report the path with the worst slack
              within the group specified by the group_name value.

              If you specify the -through option only once, the  tool  reports
              only the paths that travel through one or more of the objects in
              the list.  You can use -through more than once  in  one  command
              invocation.   For  a  discussion of the use of multiple -through
              options, see the DESCRIPTION section.

       -rise_through rise_through_list
              This option is similar to the -through option, but applies  only
              to paths with a rising transition at the specified objects.  You
              can specify -rise_through more than once  in  a  single  command
              invocation.    For    a   discussion   of   multiple   -through,
              -rise_through, and -fall_through options,  see  the  DESCRIPTION
              section.

       -fall_through fall_through_list
              This  option is similar to the -through option, but applies only
              to paths with a falling transition  at  the  specified  objects.
              You can specify -fall_through more than once in a single command
              invocation.   For   a   discussion   of    multiple    -through,
              -rise_through,  and  -fall_through  options, see the DESCRIPTION
              section.

       -exclude exclude_list
              Excludes all data paths from/through/to the named  pins,  ports,
              nets,  and  cell instances. Any data path that starts from, con-
              tains, or ends on a listed object is excluded.  If you specify a
              cell  instance,  data  paths  that  include any pin of that cell
              instance are excluded. This option has  higher  precedence  than
              the -from, -through, -to, and similar options.

              The  exclusion  does  not  apply  to  clock paths, even when the
              -path_type full  or  -path_type  full_clock_expanded  option  is
              used.   It   does   not   apply  to  borrowing  paths  from  the
              -trace_latch_borrow option.

              This option is not applied to clock pins.

       -rise_exclude rise_exclude_list
              Same as the -exclude option, but applies only to paths rising at
              the named pins, ports, nets, and cell instances.

       -fall_exclude fall_exclude_list
              Same  as  the -exclude option, but applies only to paths falling
              at the named pins, ports, nets, and cell instances.

       -delay_type delay_type
              Specifies the type of path delay.  The  valid  values  are  max,
              min,  min_max,  max_rise, max_fall, min_rise, and min_fall.  The
              rise or fall in the delay_type refers to  a  rising  or  falling
              transition at the path endpoint.

       -nworst paths_per_endpoint
              Specifies  the maximum number of paths to get per endpoint.  The
              default is 1, which gets only the single worst path ending at  a
              given endpoint.

       -max_paths max_path_count
              Specifies  the number of paths to get per path group by default,
              or the number of paths to get from the whole design if the  tim-
              ing_report_fast_mode  variable is set to true. The default is 1.

       -enable_preset_clear_arcs
              Enables asynchronous preset and clear arcs for the  timing  path
              collection.   By  default, asynchronous timing arcs are disabled
              during timing verification.

       -group group_name
              Restricts the collection to paths in this group_name.   Use  the
              group_path or create_clock command to group paths.

       -greater greater_limit
              Selects  only  those  paths  that  have a delay greater than the
              greater_limit value.  The -greater and -lesser  options  can  be
              combined to select only those paths inside or outside of a given
              delay range. The specified value is in main library units.

       -lesser lesser_limit
              Selects only those  paths  that  have  a  delay  less  than  the
              lesser_limit  value.   The  -greater  and -lesser options can be
              combined to select only those paths inside or outside of a given
              delay range. The specified value is in main library units.

       -slack_greater_than greater_slack_limit
              Selects   only   those   paths   with   a   slack  greater  than
              greater_slack_limit.  The -slack_greater_than option can be com-
              bined  with  the  -slack_lesser_than option to select only those
              paths inside or outside of a given slack range.   The  specified
              value is in main library units.

       -slack_lesser_than lesser_slack_limit
              Selects    only   those   paths   with   a   slack   less   than
              lesser_slack_limit.  The -slack_greater_than option can be  com-
              bined  with  the  -slack_lesser_than option to select only those
              paths inside or outside of a given slack  range.  The  specified
              value is in main library units.

       -include_hierarchical_pins
              Specifies  for  the  returned timing paths to contain points for
              each hierarchical pin crossed, as well as for all leaf  pins  in
              the  path.   It also sets to true their hierarchical attributes.
              Note that clock paths are always hierarchical.

       -path_type full_clock_expanded | full
              Specifies whether or not to calculate launch and  capture  clock
              paths  (if they exist) for the selected paths.  The valid values
              are   full_clock_expanded   and   full.    When   you    specify
              full_clock_expanded,  the tool calculates clock paths.  When you
              specify full, it does not calculate them.  You  can  access  the
              clock   path   data   of   a   path   (if  calculated)  via  its
              launch_clock_paths and capture_clock_paths attributes.

       -unique_pins
              Causes only the single  worst  timing  path  through  any  given
              sequence of pins to be reported. No other paths are reported for
              the same sequence of pins from startpoint to endpoint. For exam-
              ple,  if  the  worst path starts with a rising edge at the first
              pin of a pin sequence, then paths starting with a  falling  edge
              are  not reported for that sequence. For non-unate logic such as
              XOR gates, this greatly reduces the  number  of  paths  reported
              because of the large number of possible rising/falling edge com-
              binations through the sequence of pins. Using  this  option  can
              require  longer  runtimes  when  used  with the -nworst n option
              because many paths must be  analyzed  to  find  the  worst  path
              through  each  pin sequence, but only the worst path is reported
              and counted toward the total number of requested paths.

       -start_end_pair
              Limits the collection of paths returned to the single worst tim-
              ing  path per each combination of startpoint and endpoint found.
              No other paths are included that have the  same  startpoint  and
              same endpoint. For example, if the worst path starts at a regis-
              ter output pin ff1/Q and ends at a register input pin ff5/D, the
              collection will omit all other less critical paths from ff1/Q to
              ff5/D. Using this option can require longer runtimes  when  used
              with the -nworst n option because many paths must be analyzed to
              find the worst path through each pin pair, but  only  the  worst
              path  in each case is selected and counted toward the total num-
              ber of requested paths.

       -scenarios scenario_list
              Gets timing paths from the specified scenarios. Inactive scenar-
              ios are skipped.

              If  you  do  not specify this option, only the timing paths from
              current scenario are returned.

DESCRIPTION
       This command creates a collection of  paths  for  custom  reporting  or
       other  operations.   You  can  use the foreach_in_collection command to
       iterate  among  the  paths  in  the  collection.   You  can   use   the
       get_attribute  and  collection commands to obtain information about the
       paths.  The following attributes are supported on timing paths:

         capture_clock_paths
         clock_uncertainty
         clock_path
         crpr_common_point
         crpr_value
         endpoint
         endpoint_clock
         endpoint_clock_close_edge_type
         endpoint_clock_close_edge_value
         endpoint_clock_is_inverted
         endpoint_clock_is_propagated
         endpoint_clock_latency
         endpoint_clock_open_edge_type
         endpoint_clock_open_edge_value
         endpoint_clock_pin
         endpoint_hold_time_value
         endpoint_is_level_sensitive
         endpoint_output_delay_value
         endpoint_recovery_time_value
         endpoint_removal_time_value
         endpoint_setup_time_value
         hierarchical
         launch_clock_paths
         object_class
         path_group
         path_type
         points
         scenario
         slack
         startpoint
         startpoint_clock
         startpoint_clock_is_inverted
         startpoint_clock_is_propagated
         startpoint_clock_latency
         startpoint_clock_open_edge_type
         startpoint_clock_open_edge_value
         startpoint_input_delay_value
         startpoint_is_level_sensitive
         time_borrowed_from_endpoint
         time_lent_to_startpoint

       One attribute of a timing path is the points collection.  A point  cor-
       responds  to  a  pin  or  port along the path.  You can iterate through
       these points by using the foreach_in_collection command and  get  their
       attributes   by   using   the  get_attribute  command.   The  following
       attributes are available for points of a timing path:

         arrival
         object
         object_class
         rise_fall
         slack

       See the collections and foreach_in_collection man  pages  for  detailed
       information.

       By  default,  the get_timing_paths command uses a reporting engine that
       can run extremely fast on large designs, especially for  larger  values
       of  the nworst and max_paths arguments.  For designs that have multiple
       timing paths with identical slack, this engine might  report  different
       paths  (with the same slack value) than a previous engine that was once
       in use.

       You can use multiple iterations  of  the  -through,  -rise_though,  and
       -fall_through  options  in  a single command to specify paths that tra-
       verse multiple points in the design.  The following  example  specifies
       paths  beginning at A1, passing through B1, then through C1, and ending
       at D1.

         prompt> get_timing_paths -from A1\
         -through B1 -through C1 -to D1

       If more than one object is specified by one -through option,  the  path
       can  pass  through any of the objects.  The following example specifies
       paths beginning at A1, passing through either B1 or  B2,  then  passing
       through either C1 or C2, and ending at D1.

         prompt> get_timing_paths -from A1 -through {B1 B2} -through {C1 C2} -to D1

   Multicorner-Multimode Support
       By  default,  this  command uses information from the current scenario.
       You can select different scenarios by using the -scenarios option.

EXAMPLES
       The following example prints out the startpoint  name,  endpoint  name,
       and slack of the worst path in each path group.

         proc custom_report_worst_path_per_group {} {
             echo [format "%-20s %-20s %7s" "From" "To" "Slack"]
             echo "--------------------------------------------------------"
             foreach_in_collection path [get_timing_paths] {
                set slack [get_attribute $path slack]
                set startpoint [get_attribute $path startpoint]
                set endpoint [get_attribute $path endpoint]
                echo [format "%-20s %-20s %s" [get_attribute $startpoint full_name] \
                         [get_attribute $endpoint full_name] $slack]
             }
         }

         prompt> custom_report_worst_path_per_group

         From                 To                     Slack
         --------------------------------------------------------
         ffa/CP               QA                   0.1977
         ffb/CP               ffd/D                3.8834

       The following example shows total negative slack, total positive slack,
       and worst negative slack for the current design.

         proc report_design_slack_information {} {
           set design_tns 0
           set design_wns 100000
           set design_tps 0
           foreach_in_collection group [get_path_groups *] {
             set group_tns 0
             set group_wns 100000
             set group_tps 0
             foreach_in_collection path [get_timing_paths -nworst 10000 -group [get_object_name $group]]{
               set slack [get_attribute $path slack]
               if {$slack < $group_wns} {
                 set group_wns $slack
                 if {$slack < $design_wns} {
                   set design_wns $slack
                 }
               }
               if {$slack < 0.0} {
                 set group_tns [expr $group_tns + $slack]
               } else {
                 set group_tps [expr $group_tps + $slack]
               }
             }
             set design_tns [expr $design_tns + $group_tns]
             set design_tps [expr $design_tps + $group_tps]
             set group_name [get_attribute $group full_name]
             echo [format "Group '%s' Worst Negative Slack : %g" $group_name $group_wns]
             echo [format "Group '%s' Total Negative Slack : %g" $group_name $group_tns]
             echo [format "Group '%s' Total Positive Slack : %g" $group_name $group_tps]
             echo ""
           }
           echo "------------------------------------------"
           echo [format "Design Worst Negative Slack : %g" $design_wns]
           echo [format "Design Total Negative Slack : %g" $design_tns]
           echo [format "Design Total Positive Slack : %g" $design_tps]
         }

         prompt> report_design_slack_information

         Group 'CLK' Worst Negative Slack : -3.1166
         Group 'CLK' Total Negative Slack : -232.986
         Group 'CLK' Total Positive Slack : 4.5656

         Group 'vclk' Worst Negative Slack : -4.0213
         Group 'vclk' Total Negative Slack : -46.1982
         Group 'vclk' Total Positive Slack : 0

         ------------------------------------------
         Design Worst Negative Slack : -4.0213
         Design Total Negative Slack : -279.184
         Design Total Positive Slack : 4.5656

SEE ALSO
       collections(2)
       create_clock(2)
       foreach_in_collection(2)
       get_attribute(2)
       group_path(2)
       report_timing(2)
       timing_report_fast_mode(3)

                          Version O-2018.06-SP4
            Copyright (c) 2018 Synopsys, Inc. All rights reserved.
